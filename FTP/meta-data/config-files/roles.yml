roleAccess:
  admin:
    - Admin
    - adminAndDev
  dev:
    - U1
    - adminAndDev
#  true: notRequiredAnyUserName
#  isLogin: notRequiredAnyUserName
  UsersControlGroup:
    - Admin
    - U1
  userGroup1:
    - U1
    - U2
    - U3
  userGroup2:
    - U1
    - U4
    - U5
  userGroup3:
    - U12
    - U13
  individualUser3:
    - U3
  individualUser7:
    - U7
  individualUser9:
    - U9
roleAccessMapping:
  isAdminUser: admin
  isDevUser: dev
  isUploadFileEnable: isLogin
  isAddTextEnable: isLogin
  isUsersControlEnable: UsersControlGroup
  isAdminOrDevUser: (admin|dev)
  isAdminOrDevOrLoginUser: (admin|dev|isLogin)
  inValidRoleEntry: (admin1|dev|isLogin)
  inValidRoleEntry2: (&dev)
  isAdminAndDevUser: (admin&dev)
  isBooleanTrue: true
  getAllUsersEnable: true
#  isLogin: notRequiredAnyRoleAccess

# Duplicate entry will be removed from final coRelatedUsers and relatedUsers calculation

coRelatedUsers:
  - userGroup1
  - userGroup2
  - userGroup3
  - invalidUserGroup
  - individualUser9
relatedUsers:
  U6:
    - individualUser3
  U5:
    - userGroup1
  U8:
    - individualUser31
  U10:
  U11:
    - individualUser3
  U14:
    - individualUser31
    - individualUser3
    - userGroup1

# final output
# tempCoRelatedUsers: {U5=[U5, U4, U1, U3, U2], U13=[U13, U12], U12=[U13, U12], U1=[U5, U4, U1, U3, U2], U2=[U5, U4, U1, U3, U2], U3=[U5, U4, U1, U3, U2], U4=[U5, U4, U1, U3, U2]}
# tempRelatedUsers: {U5=[U1, U2, U3, U5], U6=[U3, U6], U11=[U3, U11], U14=[U3, U14, U1, U2, U3, U14]}
# relatedUsers after merging: {U5=[U1, U2, U3, U5, U4], U6=[U3, U6], U11=[U3, U11], U13=[U13, U12], U12=[U13, U12], U14=[U3, U14, U1, U2, U3, U14], U1=[U5, U4, U1, U3, U2], U2=[U5, U4, U1, U3, U2], U3=[U5, U4, U1, U3, U2], U4=[U5, U4, U1, U3, U2]}
# finalRelatedUsers after duplicate removal: {U5=[U1, U2, U3, U5, U4], U6=[U3, U6], U11=[U3, U11], U13=[U13, U12], U12=[U13, U12], U14=[U3, U14, U1, U2], U1=[U5, U4, U1, U3, U2], U2=[U5, U4, U1, U3, U2], U3=[U5, U4, U1, U3, U2], U4=[U5, U4, U1, U3, U2]}

# Note: no final entry for U8 and U10
